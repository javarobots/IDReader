package cardreader.dialog;

import cardreader.datahandling.DataParser;
import cardreader.datahandling.EventTypes;
import cardreader.datahandling.IdData;
import cardreader.preferences.ReaderPreferences;
import cardreader.ui.Model;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;

/**
 *
 * @author javarobots <javarobots74@gmail.com>
 */
public class ReportDialog extends javax.swing.JDialog {

    private EventTypes mEventType;
    private IdData mData;
    private ReportTableModel mTableModel;
    private ReaderPreferences mPrefs;
    private String mSaveType;
    /**
     * Creates new form ReportDialog
     */
    public ReportDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ReportDialog(java.awt.Frame parent, boolean modal, EventTypes type, Model model) {
        super(parent, modal);
        initComponents();
        mTableModel = new ReportTableModel();
        mDataTable.setModel(mTableModel);
        mEventType = type;
        mData = model.getPersonnelData();
        mPrefs = model.getPreferences();
        initTypeLabel();
    }

    private void initTypeLabel(){
        if (mEventType.equals(EventTypes.AS100)){
            mTypeLabel.setText("AS 100");
            mSaveType = "AS100";
        } else if (mEventType.equals(EventTypes.AS200)) {
            mTypeLabel.setText("AS 200");
            mSaveType = "AS200";
        } else if (mEventType.equals(EventTypes.AS300)) {
            mTypeLabel.setText("AS 300");
            mSaveType = "AS300";
        } else if (mEventType.equals(EventTypes.AS400)) {
            mTypeLabel.setText("AS 400");
            mSaveType = "AS400";
        } else if (mEventType.equals(EventTypes.PT)) {
            mTypeLabel.setText("Physical Training");
            mSaveType = "PT";
        } else if (mEventType.equals(EventTypes.LLAB)) {
            mTypeLabel.setText("Leadership Laboratory");
            mSaveType = "LLAB";
        }

        List<Integer> expectedIDs = null;
        if (mEventType != EventTypes.PT && mEventType != EventTypes.LLAB){
            expectedIDs = mData.getIDsForAsLevel(mEventType);
        } else {
            expectedIDs = mData.getAllIDs();
        }
        List<Integer> idsInDataFile = mData.getIDsInDataFile();

        for (int expected : expectedIDs) {
            if (!idsInDataFile.contains(expected)){
                mTableModel.addName(mData.getName(expected));
            }
        }
        mAbsenceLabel.setText("Number Absent: " + mTableModel.getRowCount());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mEventTypeLabel = new javax.swing.JLabel();
        mTypeLabel = new javax.swing.JLabel();
        mAbsenceLabel = new javax.swing.JLabel();
        mCloseButton = new javax.swing.JButton();
        mScrollPane = new javax.swing.JScrollPane();
        mDataTable = new javax.swing.JTable();
        mSaveReportButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Absence Report");
        setResizable(false);

        mEventTypeLabel.setText("Event Type:");

        mTypeLabel.setText("Type");

        mAbsenceLabel.setText("Absences: 0");

        mCloseButton.setText("Close");
        mCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCloseButtonActionPerformed(evt);
            }
        });

        mDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        mScrollPane.setViewportView(mDataTable);

        mSaveReportButton.setText("Save Report");
        mSaveReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSaveReportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mAbsenceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mSaveReportButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mCloseButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(mEventTypeLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(mTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(mScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mEventTypeLabel)
                    .addComponent(mTypeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mCloseButton)
                    .addComponent(mSaveReportButton)
                    .addComponent(mAbsenceLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCloseButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_mCloseButtonActionPerformed

    private void mSaveReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSaveReportButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "Text Files", "txt");
        chooser.setFileFilter(filter);
        chooser.setSelectedFile(new File((new DataParser()).gregorianDateTime() + "_" + mSaveType + "_Absences.txt"));
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION){
            try {
                File outFile = chooser.getSelectedFile();
                if (!outFile.exists()) {
                    outFile.createNewFile();
                }
                try (BufferedWriter bw = new BufferedWriter(new FileWriter(outFile, true))) {
                    TableModel tableModel = mDataTable.getModel();
                    for (int i = 0; i < tableModel.getRowCount(); i++){
                        bw.append(tableModel.getValueAt(i, 0) + "\n");
                    }
                    bw.flush();
                }
            } catch (IOException ex) {
                Logger.getLogger(ReportDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mSaveReportButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel mAbsenceLabel;
    private javax.swing.JButton mCloseButton;
    private javax.swing.JTable mDataTable;
    private javax.swing.JLabel mEventTypeLabel;
    private javax.swing.JButton mSaveReportButton;
    private javax.swing.JScrollPane mScrollPane;
    private javax.swing.JLabel mTypeLabel;
    // End of variables declaration//GEN-END:variables
}
